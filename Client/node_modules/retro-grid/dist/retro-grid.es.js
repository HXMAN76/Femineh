import { defineComponent as l, computed as g, openBlock as d, createElementBlock as c, normalizeClass as b, normalizeStyle as n, createElementVNode as i } from "vue";
const s = {
  class: "grid-container",
  style: { transform: "rotateX(var(--grid-angle))" }
}, p = /* @__PURE__ */ l({
  __name: "RetroGrid",
  props: {
    theme: { default: "cyberpunk" },
    angle: {},
    lineColor: {},
    glowSize: {},
    opacity: {},
    bgGradientFrom: {},
    bgGradientTo: {}
  },
  setup(a) {
    const t = {
      cyberpunk: {
        angle: 65,
        lineColor: "rgba(255, 0, 255, 0.5)",
        glowSize: 5,
        opacity: 0.5,
        bgGradientFrom: "rgba(20, 0, 40, 0.8)",
        bgGradientTo: "rgba(0, 0, 0, 0)"
      },
      matrix: {
        angle: 70,
        lineColor: "rgba(0, 255, 0, 0.5)",
        glowSize: 3,
        opacity: 0.4,
        bgGradientFrom: "rgba(0, 20, 0, 0.9)",
        bgGradientTo: "rgba(0, 0, 0, 0)"
      },
      vaporwave: {
        angle: 60,
        lineColor: "rgba(0, 255, 255, 0.6)",
        glowSize: 4,
        opacity: 0.6,
        bgGradientFrom: "rgba(147, 51, 234, 0.8)",
        bgGradientTo: "rgba(236, 72, 153, 0)"
      },
      classic: {
        angle: 75,
        lineColor: "rgba(255, 255, 255, 0.3)",
        glowSize: 2,
        opacity: 0.3,
        bgGradientFrom: "rgba(30, 30, 30, 0.9)",
        bgGradientTo: "rgba(0, 0, 0, 0)"
      },
      midnight: {
        angle: 68,
        lineColor: "rgba(30, 64, 175, 0.5)",
        glowSize: 4,
        opacity: 0.4,
        bgGradientFrom: "rgba(15, 23, 42, 0.9)",
        bgGradientTo: "rgba(0, 0, 0, 0)"
      }
    }, o = a, e = g(() => {
      const r = t[o.theme];
      return {
        ...r,
        angle: o.angle ?? r.angle,
        lineColor: o.lineColor ?? r.lineColor,
        glowSize: o.glowSize ?? r.glowSize,
        opacity: o.opacity ?? r.opacity,
        bgGradientFrom: o.bgGradientFrom ?? r.bgGradientFrom,
        bgGradientTo: o.bgGradientTo ?? r.bgGradientTo
      };
    });
    return (r, v) => (d(), c("div", {
      class: b(["retro-grid"]),
      style: n({
        perspective: "200px",
        "--grid-angle": `${e.value.angle}deg`,
        "--grid-opacity": e.value.opacity,
        "--line-color": e.value.lineColor,
        "--line-glow": `0 0 ${e.value.glowSize}px ${e.value.lineColor}`,
        "--bg-from": e.value.bgGradientFrom,
        "--bg-to": e.value.bgGradientTo
      })
    }, [
      i("div", s, [
        i("div", {
          class: "grid-lines",
          style: n({
            backgroundImage: `
            linear-gradient(to right, ${e.value.lineColor} 1px, transparent 0),
            linear-gradient(to bottom, ${e.value.lineColor} 1px, transparent 0)
          `,
            opacity: e.value.opacity,
            boxShadow: "var(--line-glow)"
          })
        }, null, 4)
      ]),
      i("div", {
        class: "gradient-overlay",
        style: n({
          background: `linear-gradient(to top, ${e.value.bgGradientFrom}, ${e.value.bgGradientTo} 90%)`
        })
      }, null, 4)
    ], 4));
  }
}), m = (a, t) => {
  const o = a.__vccOpts || a;
  for (const [e, r] of t)
    o[e] = r;
  return o;
}, u = /* @__PURE__ */ m(p, [["__scopeId", "data-v-19fea000"]]), y = {
  install: (a) => {
    a.component("RetroGrid", u);
  }
};
export {
  u as RetroGrid,
  y as default
};
